/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ultrasound.bookings;

import java.awt.Desktop;
import java.io.File;
import java.io.PrintWriter;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Scanner;

/**
 *
 * @author ellix
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    private static String initials = null;

    public Main(String initials) {
        initComponents();
        this.initials = initials;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        newb = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        download = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        newb.setText("New Booking");
        newb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newbActionPerformed(evt);
            }
        });

        edit.setText("Edit booking");
        edit.setToolTipText("");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        download.setText("Download all bookings");
        download.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downloadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(140, 140, 140)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(edit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(newb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(download, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(140, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(newb)
                .addGap(39, 39, 39)
                .addComponent(edit)
                .addGap(40, 40, 40)
                .addComponent(download)
                .addContainerGap(78, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newbActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new NewBooking(initials).setVisible(true);
    }//GEN-LAST:event_newbActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new editSearch(initials).setVisible(true);
    }//GEN-LAST:event_editActionPerformed

    private void downloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downloadActionPerformed
        // TODO add your handling code here:
        try {
            File file;

            DateTimeFormatter year = DateTimeFormatter.ofPattern("yyyy");
            DateTimeFormatter month = DateTimeFormatter.ofPattern("MM");
            DateTimeFormatter day = DateTimeFormatter.ofPattern("dd");
            LocalDateTime now = LocalDateTime.now();
            int nyear = Integer.parseInt(year.format(now));
            int nmonth = Integer.parseInt(month.format(now));
            int nday = Integer.parseInt(day.format(now));

            for (int i = 0; i < 30; i++) {
                file = new File("ultrasound booking " + String.format("%02d", nday) + String.format("%02d", nmonth) + String.format("%02d", nyear) + ".txt");
                if (file.exists()) {
                    Scanner scan = new Scanner(file);
                    String name = "ultrasound booking " + String.format("%02d", nday) + "-" + String.format("%02d", nmonth) + "-" + String.format("%02d", nyear) + ".txt";
                    PrintWriter writer = new PrintWriter(name, "UTF-8");
                    String line;
                    writer.println(String.format("%02d", nday) + "-" + String.format("%02d", nmonth) + "-" + String.format("%02d", nyear));
                    writer.println();
                    while (scan.hasNext()) {
                        line = scan.nextLine();
                        writer.println("Time: " + line.substring(0, line.indexOf(" status")));
                        
                        if (line.substring(line.indexOf("status ") + 7, line.indexOf("status ") + 8).equals("b")) {
                            System.out.println("not else ");
                            writer.println("Technician: " + line.substring(line.indexOf("tech ") + 5, line.indexOf(" first name")));
                            writer.println("Avaliable ultrasound types: " + line.substring(line.indexOf("status ") + 9, line.indexOf(" tech")));
                            writer.println("Booked ultrasound type: " + line.substring(line.indexOf("type ") + 5, line.indexOf(" notes")));

                            String patientName = " ";
                            if (!line.substring(line.indexOf("first name") + 11, line.indexOf(" last name")).equals("null")) {
                                patientName = (line.substring(line.indexOf("first name") + 11, line.indexOf(" last name")) + " ");
                            }
                            if (!line.substring(line.indexOf("last name") + 10, line.indexOf(" phone number")).equals("null")) {
                                patientName = patientName + (line.substring(line.indexOf("last name") + 10, line.indexOf(" phone number")));
                            }
                            writer.println("Name: " + patientName);

                            if (!line.substring(line.indexOf("phone number") + 13, line.indexOf(" dob")).equals("null")) {
                                writer.println("Phone :" + line.substring(line.indexOf("phone number") + 13, line.indexOf(" dob")));
                            }
                            if (!line.substring(line.indexOf("dob") + 4, line.indexOf(" type")).equals("null")) {
                                writer.println("DOB: " + line.substring(line.indexOf("dob") + 4, line.indexOf(" type")));
                            }
                            if (!line.substring(line.indexOf(" notes") + 7, line.indexOf(" initial")).equals("null")) {
                                writer.println("Notes: " + line.substring(line.indexOf(" notes") + 7, line.indexOf(" initial")));
                            }
                            writer.println("Initials: " + line.substring(line.indexOf("initial") + 7));
                        }
                        else {
                            System.out.println("else");
                            System.out.println(line.substring(line.indexOf("tech ") + 5));
                            writer.println("Technician: " + line.substring(line.indexOf("tech ") + 5));
                            writer.println("Avaliable ultrasound types: " + line.substring(line.indexOf("status ") + 9, line.indexOf(" tech")));
                       }
                        writer.println("---------------------------------------");

                    }
                    writer.println("END");
                    writer.close();
                    File file2 = new File(name);
                    Desktop dt = Desktop.getDesktop();
                    dt.open(file2);
                }
                nday++;
                if (nday == 32) {
                    switch (nmonth) {
                        case 1:
                        case 3:
                        case 5:
                        case 7:
                        case 8:
                        case 10:
                        case 12:
                            nmonth++;
                            nday = 1;
                    }
                } else if (nday == 31) {
                    switch (nmonth) {
                        case 3:
                        case 4:
                        case 6:
                        case 9:
                        case 11:
                            nmonth++;
                            nday = 1;
                    }
                }
                if (nmonth == 2) {
                    if (nyear % 4 == 0 && nday == 30) {
                        nmonth++;
                        nday = 1;
                    } else if (nyear % 4 != 0 && nday == 29) {
                        nmonth++;
                        nday = 1;
                    }
                }
            }

        } catch (Exception e) {

        }


    }//GEN-LAST:event_downloadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main(initials).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton download;
    private javax.swing.JButton edit;
    private javax.swing.JButton newb;
    // End of variables declaration//GEN-END:variables
}
